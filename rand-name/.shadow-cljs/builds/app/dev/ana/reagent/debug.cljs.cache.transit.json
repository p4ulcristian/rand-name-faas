["^ ","~:output",["^ ","~:js","goog.provide('reagent.debug');\ngoog.require('cljs.core');\nreagent.debug.has_console = (typeof console !== 'undefined');\nreagent.debug.tracking = false;\nif((typeof reagent !== 'undefined') && (typeof reagent.debug !== 'undefined') && (typeof reagent.debug.warnings !== 'undefined')){\n} else {\nreagent.debug.warnings = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null);\n}\nif((typeof reagent !== 'undefined') && (typeof reagent.debug !== 'undefined') && (typeof reagent.debug.track_console !== 'undefined')){\n} else {\nreagent.debug.track_console = (function (){var o = ({});\no.warn = ((function (o){\nreturn (function() { \nvar G__19860__delegate = function (args){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(reagent.debug.warnings,cljs.core.update_in,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552)], null),cljs.core.conj,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,args)], 0));\n};\nvar G__19860 = function (var_args){\nvar args = null;\nif (arguments.length > 0) {\nvar G__19877__i = 0, G__19877__a = new Array(arguments.length -  0);\nwhile (G__19877__i < G__19877__a.length) {G__19877__a[G__19877__i] = arguments[G__19877__i + 0]; ++G__19877__i;}\n  args = new cljs.core.IndexedSeq(G__19877__a,0,null);\n} \nreturn G__19860__delegate.call(this,args);};\nG__19860.cljs$lang$maxFixedArity = 0;\nG__19860.cljs$lang$applyTo = (function (arglist__19878){\nvar args = cljs.core.seq(arglist__19878);\nreturn G__19860__delegate(args);\n});\nG__19860.cljs$core$IFn$_invoke$arity$variadic = G__19860__delegate;\nreturn G__19860;\n})()\n;})(o))\n;\n\no.error = ((function (o){\nreturn (function() { \nvar G__19884__delegate = function (args){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(reagent.debug.warnings,cljs.core.update_in,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032)], null),cljs.core.conj,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,args)], 0));\n};\nvar G__19884 = function (var_args){\nvar args = null;\nif (arguments.length > 0) {\nvar G__19885__i = 0, G__19885__a = new Array(arguments.length -  0);\nwhile (G__19885__i < G__19885__a.length) {G__19885__a[G__19885__i] = arguments[G__19885__i + 0]; ++G__19885__i;}\n  args = new cljs.core.IndexedSeq(G__19885__a,0,null);\n} \nreturn G__19884__delegate.call(this,args);};\nG__19884.cljs$lang$maxFixedArity = 0;\nG__19884.cljs$lang$applyTo = (function (arglist__19886){\nvar args = cljs.core.seq(arglist__19886);\nreturn G__19884__delegate(args);\n});\nG__19884.cljs$core$IFn$_invoke$arity$variadic = G__19884__delegate;\nreturn G__19884;\n})()\n;})(o))\n;\n\nreturn o;\n})();\n}\nreagent.debug.track_warnings = (function reagent$debug$track_warnings(f){\nreagent.debug.tracking = true;\n\ncljs.core.reset_BANG_(reagent.debug.warnings,null);\n\n(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n\nvar warns = cljs.core.deref(reagent.debug.warnings);\ncljs.core.reset_BANG_(reagent.debug.warnings,null);\n\nreagent.debug.tracking = false;\n\nreturn warns;\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","reagent/debug.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",18],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:macros",["^ ","~$assert-js-object",["^ ","~:arglists",["~#list",[["~$value"]]],"^7",83,"^8",1,"^6","reagent/debug.clj","~:name","~$reagent.debug/assert-js-object","~:ns","~$reagent.debug","~:macro",true],"~$log",["^ ","^G",["^H",[["~$&","~$forms"]]],"~:doc","Print with console.log, if it exists.","^7",4,"^8",1,"^6","reagent/debug.clj","^J","~$reagent.debug/log","^L","^M","^N",true],"~$warn-unless",["^ ","^G",["^H",[["~$cond","~$&","^P"]]],"^7",19,"^8",1,"^6","reagent/debug.clj","^J","~$reagent.debug/warn-unless","^L","^M","^N",true],"~$assert-some",["^ ","^G",["^H",[["^I","~$tag"]]],"^7",75,"^8",1,"^6","reagent/debug.clj","^J","~$reagent.debug/assert-some","^L","^M","^N",true],"~$assert-new-state",["^ ","^G",["^H",[["^I"]]],"^7",88,"^8",1,"^6","reagent/debug.clj","^J","~$reagent.debug/assert-new-state","^L","^M","^N",true],"~$dbg",["^ ","^G",["^H",[["~$x"]]],"^Q","Useful debugging macro that prints the source and value of x,\nas well as package name and line number. Returns x.","^7",45,"^8",1,"^6","reagent/debug.clj","^J","~$reagent.debug/dbg","^L","^M","^N",true],"~$prn",["^ ","^G",["^H",[["~$&","^P"]]],"^Q","Like standard prn, but prints using console.log (so that we get\nnice clickable links to source in modern browsers).","^7",39,"^8",1,"^6","reagent/debug.clj","^J","~$reagent.debug/prn","^L","^M","^N",true],"~$warn",["^ ","^G",["^H",[["~$&","^P"]]],"^Q","Print with console.warn.","^7",10,"^8",1,"^6","reagent/debug.clj","^J","~$reagent.debug/warn","^L","^M","^N",true],"~$dev?",["^ ","^G",["^H",[[]]],"^Q","True if assertions are enabled.","^7",60,"^8",1,"^6","reagent/debug.clj","^J","~$reagent.debug/dev?","^L","^M","^N",true],"~$println",["^ ","^G",["^H",[["~$&","^P"]]],"^Q","Print string with console.log","^7",34,"^8",1,"^6","reagent/debug.clj","^J","~$reagent.debug/println","^L","^M","^N",true],"~$time",["^ ","^G",["^H",[["~$&","^P"]]],"^7",65,"^8",1,"^6","reagent/debug.clj","^J","~$reagent.debug/time","^L","^M","^N",true],"~$assert-component",["^ ","^G",["^H",[["^I"]]],"^7",78,"^8",1,"^6","reagent/debug.clj","^J","~$reagent.debug/assert-component","^L","^M","^N",true],"~$assert-callable",["^ ","^G",["^H",[["^I"]]],"^7",93,"^8",1,"^6","reagent/debug.clj","^J","~$reagent.debug/assert-callable","^L","^M","^N",true],"~$error",["^ ","^G",["^H",[["~$&","^P"]]],"^Q","Print with console.error.","^7",25,"^8",1,"^6","reagent/debug.clj","^J","~$reagent.debug/error","^L","^M","^N",true]],"^J","^M","~:op","^L","~:imports",null,"~:requires",["^ ","~$cljs.core","^1D","~$goog","^1E"],"~:seen",["^D",["~:require-macros"]],"~:uses",null,"^1G",["^ ","^M","^M","^1D","^1D"],"~:form",["^H",["~$ns","^M",["^H",["^1G",["^M"]]]]],"~:flags",["^ ","^1G",["^D",[]]],"~:js-deps",["^ "],"~:deps",["^1E","^1D"]],"^L","^M","~:resource-id",["~:shadow.build.classpath/resource","reagent/debug.cljs"],"~:compiled-at",1582904387712,"~:resource-name","reagent/debug.cljs","~:warnings",[],"~:source","(ns reagent.debug\n  (:require-macros [reagent.debug]))\n\n(def ^:const has-console (exists? js/console))\n\n(def ^boolean tracking false)\n\n(defonce warnings (atom nil))\n\n(defonce track-console\n  (let [o #js{}]\n    (set! (.-warn o)\n          (fn [& args]\n            (swap! warnings update-in [:warn] conj (apply str args))))\n    (set! (.-error o)\n          (fn [& args]\n            (swap! warnings update-in [:error] conj (apply str args))))\n    o))\n\n(defn track-warnings [f]\n  (set! tracking true)\n  (reset! warnings nil)\n  (f)\n  (let [warns @warnings]\n    (reset! warnings nil)\n    (set! tracking false)\n    warns))\n","~:reader-features",["^D",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings",";;AAGA,AAAaA,AAAY,AAAAC;AAEzB,AAAA,AAAcC;AAEd,AAAA,AAAAC,AAAAC,AAAAC;AAAA;AAAA,AAAA,AAASC,AAAS,AAAA,AAACC;;AAEnB,AAAA,AAAAJ,AAAAC,AAAAI;AAAA;AAAA,AAAA,AAASC,AACP,AAAA,AAAMC;AAAN,AACE,AAAM,AAAQA,AACR;;AAAOC;AAAP,AACE,AAAA,AAAA,AAACC,AAAMN,AAASO,AAAkBC,AAAK,AAACC,AAAMC,AAAIL;;;AAD7CA;;;;AAAAA;;AAAAA;;;AAAAA;AAAAA;;;;;;;;AAEb,AAAM,AAASD,AACT;;AAAOC;AAAP,AACE,AAAA,AAAA,AAACC,AAAMN,AAASO,AAAmBC,AAAK,AAACC,AAAMC,AAAIL;;;AAD9CA;;;;AAAAA;;AAAAA;;;AAAAA;AAAAA;;;;;;;;AAEbD;;;AAEJ,AAAA,AAAMO,AAAgBC;AAAtB,AACE,AAAA,AAAMhB;;AACN,AAAA,AAACiB,AAAOb;;AACR,AAACY,AAAAA,AAAAA;;AACD,AAAA,AAAAE,AAAMC,AAAOf;AAAb,AACE,AAAA,AAACa,AAAOb;;AACR,AAAA,AAAMJ;;AACNmB","names",["reagent.debug/has-console","js/console","reagent.debug/tracking","js/reagent","js/reagent.debug","js/reagent.debug.warnings","reagent.debug/warnings","cljs.core.atom.cljs$core$IFn$_invoke$arity$1","js/reagent.debug.track-console","reagent.debug/track-console","o","args","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic","cljs.core/update-in","cljs.core/conj","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/str","reagent.debug/track-warnings","f","cljs.core/reset!","cljs.core/deref","warns"]]],"~:cache-keys",["~#cmap",[["^1O","goog/math/math.js"],[1580140315000,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^D",[]],"~:deps-syms",["^1E","~$goog.array","~$goog.asserts"]]],["^1O","goog/array/array.js"],[1580140315000,"^20",["^ ","^21",null,"^22",["^D",[]],"^23",["^1E","^25"]]],["^1O","goog/debug/error.js"],[1580140315000,"^20",["^ ","^21",null,"^22",["^D",[]],"^23",["^1E"]]],["^1O","goog/dom/nodetype.js"],[1580140315000,"^20",["^ ","^21",null,"^22",["^D",[]],"^23",["^1E"]]],["^1O","goog/object/object.js"],[1580140315000,"^20",["^ ","^21",null,"^22",["^D",[]],"^23",["^1E"]]],"~:SHADOW-TIMESTAMP",[1580140326000,1580140308000],["^1O","goog/math/long.js"],[1580140315000,"^20",["^ ","^21",null,"^22",["^D",[]],"^23",["^1E","^25","~$goog.reflect"]]],["^1O","goog/string/internal.js"],[1580140315000,"^20",["^ ","^21",null,"^22",["^D",[]],"^23",["^1E"]]],["^1O","goog/functions/functions.js"],[1580140315000,"^20",["^ ","^21",null,"^22",["^D",[]],"^23",["^1E"]]],["^1O","goog/structs/map.js"],[1580140315000,"^20",["^ ","^21",null,"^22",["^D",[]],"^23",["^1E","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1O","goog/asserts/asserts.js"],[1580140315000,"^20",["^ ","^21",null,"^22",["^D",[]],"^23",["^1E","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1O","goog/uri/uri.js"],[1580140315000,"^20",["^ ","^21",null,"^22",["^D",[]],"^23",["^1E","^24","^25","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1O","goog/base.js"],[1580140315000,"^20",["^ ","^21",null,"^22",["^D",[]],"^23",[]]],["^1O","goog/structs/structs.js"],[1580140315000,"^20",["^ ","^21",null,"^22",["^D",[]],"^23",["^1E","^24","~$goog.object"]]],["^1O","goog/string/string.js"],[1580140315000,"^20",["^ ","^21",null,"^22",["^D",[]],"^23",["^1E","~$goog.string.internal"]]],["^1O","goog/reflect/reflect.js"],[1580140315000,"^20",["^ ","^21",null,"^22",["^D",[]],"^23",["^1E"]]],["^1O","goog/string/stringbuffer.js"],[1580140315000,"^20",["^ ","^21",null,"^22",["^D",[]],"^23",["^1E"]]],["^1O","goog/iter/iter.js"],[1580140315000,"^20",["^ ","^21",null,"^22",["^D",[]],"^23",["^1E","^24","^25","~$goog.functions","~$goog.math"]]],["^1O","cljs/core.cljs"],[1580140308000,"^20",["^ ","^21",null,"^22",["^D",[]],"^23",["~$goog.math.Long","~$goog.math.Integer","^2<","^2B","^24","~$goog.Uri","~$goog.string.StringBuffer"]]],["^1O","reagent/debug.cljs"],[1582903546000,"^20",["^ ","^21",null,"^22",["^D",[]],"^23",["^1E","^1D"]]],["^1O","goog/math/integer.js"],[1580140315000,"^20",["^ ","^21",null,"^22",["^D",[]],"^23",["^1E"]]],["^1O","goog/uri/utils.js"],[1580140315000,"^20",["^ ","^21",null,"^22",["^D",[]],"^23",["^1E","^24","^25","^2<"]]]]],"~:clj-info",["^ ","jar:file:/Users/paulcristianmartin/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/util.cljc",1580140308000,"jar:file:/Users/paulcristianmartin/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1580140301000,"jar:file:/Users/paulcristianmartin/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map.clj",1580140308000,"jar:file:/Users/paulcristianmartin/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/core.cljc",1580140308000,"jar:file:/Users/paulcristianmartin/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/compiler.cljc",1580140308000,"jar:file:/Users/paulcristianmartin/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/impl/inspect.clj",1580663345000,"jar:file:/Users/paulcristianmartin/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/js_deps.cljc",1580140308000,"jar:file:/Users/paulcristianmartin/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1580140301000,"jar:file:/Users/paulcristianmartin/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1580140301000,"jar:file:/Users/paulcristianmartin/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/env.cljc",1580140308000,"jar:file:/Users/paulcristianmartin/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1580140307000,"jar:file:/Users/paulcristianmartin/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/tagged_literals.cljc",1580140308000,"jar:file:/Users/paulcristianmartin/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1580140301000,"jar:file:/Users/paulcristianmartin/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader.clj",1580663345000,"jar:file:/Users/paulcristianmartin/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/reader_types.clj",1580663345000,"jar:file:/Users/paulcristianmartin/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/impl/errors.clj",1580663345000,"jar:file:/Users/paulcristianmartin/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64.clj",1580140308000,"jar:file:/Users/paulcristianmartin/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64_vlq.clj",1580140308000,"jar:file:/Users/paulcristianmartin/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/default_data_readers.clj",1580663345000,"jar:file:/Users/paulcristianmartin/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1580140301000,"jar:file:/Users/paulcristianmartin/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/externs.clj",1580140308000,"jar:file:/Users/paulcristianmartin/.m2/repository/reagent/reagent/0.9.1/reagent-0.9.1.jar!/reagent/debug.clj",1582903546000,"jar:file:/Users/paulcristianmartin/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1580140301000,"jar:file:/Users/paulcristianmartin/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1580140301000,"jar:file:/Users/paulcristianmartin/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/analyzer.cljc",1580140308000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","reagent/debug.cljs","^7",1,"^8",5,"^9",1,"^:",18],"^;",["^ ","^<","^=","^>","^?","^@","^A"],"^B",null,"^C",["^D",[]],"^E",["^ ","^F",["^ ","^G",["^H",[["^I"]]],"^7",83,"^8",1,"^6","reagent/debug.clj","^J","^K","^L","^M","^N",true],"^O",["^ ","^G",["^H",[["~$&","^P"]]],"^Q","Print with console.log, if it exists.","^7",4,"^8",1,"^6","reagent/debug.clj","^J","^R","^L","^M","^N",true],"^S",["^ ","^G",["^H",[["^T","~$&","^P"]]],"^7",19,"^8",1,"^6","reagent/debug.clj","^J","^U","^L","^M","^N",true],"^V",["^ ","^G",["^H",[["^I","^W"]]],"^7",75,"^8",1,"^6","reagent/debug.clj","^J","^X","^L","^M","^N",true],"^Y",["^ ","^G",["^H",[["^I"]]],"^7",88,"^8",1,"^6","reagent/debug.clj","^J","^Z","^L","^M","^N",true],"^[",["^ ","^G",["^H",[["~$x"]]],"^Q","Useful debugging macro that prints the source and value of x,\nas well as package name and line number. Returns x.","^7",45,"^8",1,"^6","reagent/debug.clj","^J","^10","^L","^M","^N",true],"^11",["^ ","^G",["^H",[["~$&","^P"]]],"^Q","Like standard prn, but prints using console.log (so that we get\nnice clickable links to source in modern browsers).","^7",39,"^8",1,"^6","reagent/debug.clj","^J","^12","^L","^M","^N",true],"^13",["^ ","^G",["^H",[["~$&","^P"]]],"^Q","Print with console.warn.","^7",10,"^8",1,"^6","reagent/debug.clj","^J","^14","^L","^M","^N",true],"^15",["^ ","^G",["^H",[[]]],"^Q","True if assertions are enabled.","^7",60,"^8",1,"^6","reagent/debug.clj","^J","^16","^L","^M","^N",true],"^17",["^ ","^G",["^H",[["~$&","^P"]]],"^Q","Print string with console.log","^7",34,"^8",1,"^6","reagent/debug.clj","^J","^18","^L","^M","^N",true],"^19",["^ ","^G",["^H",[["~$&","^P"]]],"^7",65,"^8",1,"^6","reagent/debug.clj","^J","^1:","^L","^M","^N",true],"^1;",["^ ","^G",["^H",[["^I"]]],"^7",78,"^8",1,"^6","reagent/debug.clj","^J","^1<","^L","^M","^N",true],"^1=",["^ ","^G",["^H",[["^I"]]],"^7",93,"^8",1,"^6","reagent/debug.clj","^J","^1>","^L","^M","^N",true],"^1?",["^ ","^G",["^H",[["~$&","^P"]]],"^Q","Print with console.error.","^7",25,"^8",1,"^6","reagent/debug.clj","^J","^1@","^L","^M","^N",true]],"^J","^M","^1B",null,"^1C",["^ ","^1D","^1D","^1E","^1E"],"^1F",["^D",["^1G"]],"^1H",null,"~:defs",["^ ","~$has-console",["^ ","^5",["^ ","^6","reagent/debug.cljs","^7",4,"^8",14,"^9",4,"^:",25,"~:const",true],"^J","~$reagent.debug/has-console","^6","reagent/debug.cljs","^:",25,"^8",1,"^3;",true,"^7",4,"^9",4,"~:tag","~$boolean"],"~$tracking",["^ ","^J","~$reagent.debug/tracking","^6","reagent/debug.cljs","^7",6,"^8",1,"^9",6,"^:",23,"^3=","^3>","^5",["^ ","^6","reagent/debug.cljs","^7",6,"^8",15,"^9",6,"^:",23,"^3=","^3>"]],"~$warnings",["^ ","^J","~$reagent.debug/warnings","^6","reagent/debug.cljs","^7",8,"^8",1,"^9",8,"^:",18,"^5",["^ ","^6","reagent/debug.cljs","^7",8,"^8",10,"^9",8,"^:",18],"^3=","~$cljs.core/Atom"],"~$track-console",["^ ","^J","~$reagent.debug/track-console","^6","reagent/debug.cljs","^7",10,"^8",1,"^9",10,"^:",23,"^5",["^ ","^6","reagent/debug.cljs","^7",10,"^8",10,"^9",10,"^:",23],"^3=","~$object"],"~$track-warnings",["^ ","~:protocol-inline",null,"^5",["^ ","^6","reagent/debug.cljs","^7",20,"^8",7,"^9",20,"^:",21,"^G",["^H",["~$quote",["^H",[["~$f"]]]]]],"^J","~$reagent.debug/track-warnings","^6","reagent/debug.cljs","^:",21,"~:method-params",["^H",[["~$f"]]],"~:protocol-impl",null,"~:arglists-meta",["^H",[null,null]],"^8",1,"~:variadic?",false,"^7",20,"~:ret-tag","~$any","^9",20,"~:max-fixed-arity",1,"~:fn-var",true,"^G",["^H",["^3I",["^H",[["~$f"]]]]]]],"^1G",["^ ","^M","^M","^1D","^1D"],"~:cljs.analyzer/constants",["^ ","^1F",["^D",["~:warn","~:error"]],"~:order",["^3T","^3U"]],"^1K",["^ ","^1G",["^D",[]]],"^1L",["^ "],"^1M",["^1E","^1D"]],"^L","^M","~:ns-specs",["^ "],"~:ns-spec-vars",["^D",[]],"~:compiler-options",["^1[",[["^3Y","~:static-fns"],true,["^3Y","~:shadow-tweaks"],null,["^3Y","~:elide-asserts"],false,["^3Y","~:optimize-constants"],null,["^3Y","^1R"],null,["^3Y","~:external-config"],null,["^3Y","~:tooling-config"],null,["^3Y","~:emit-constants"],null,["^3Y","~:load-tests"],null,["^3Y","~:form-size-threshold"],null,["^3Y","~:infer-externs"],true,["^3Y","^1T"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^3Y","~:fn-invoke-direct"],null,["^3Y","~:source-map"],"/dev/null"]]]