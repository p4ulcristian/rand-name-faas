{"version":3,"sources":["function/core.cljs"],"mappings":";;;;;;;;AASA,AAAKA,AACH,AAAA,AAAA,AAAA,AAAA,AAACC;AAGH,AAAA,AAAMC;AAAN,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;AAKA,AAAA,AAAMC;AAAN,AACE,AAAA,AAACC,AAAgBF,AAAa,AAAA,AAAiBG;;AAEjD,AAAA,AAAMC;AAAN,AAEE,AAACC;;AACD,AAAA,AAAA,AAACC,AAEE,AAAKC;AAAL,AACE,AAAMC,AAAM,AAACC,AAAqBX,AAAOS;AACnCG,AAAa,AAAA,AAAO,AAAA,AAAQF;AAC5BG,AAAa,AAAA,AAAcH;AAFjC,AAGE,AAACI,AAAqBC;;AAGtB,AAACC,AAAqBP;AAT7B,AAYG,AAAKA;AAAL,AACE,AAACQ,AAAQ,AAACN,AAAqBX,AAAOS;;;AAC3C,AAACS;;AACD,AAACf","names":["function.core/router","reitit.frontend.router.cljs$core$IFn$_invoke$arity$1","function.core/client-page","function.core/mount-root","reagent.core.render.cljs$core$IFn$_invoke$arity$2","js/document","function.core/init!","clerk.core/initialize!","accountant.core/configure-navigation!","path","match","reitit.frontend/match-by-path","current-page","route-params","reagent.core/after-render","clerk.core/after-render!","clerk.core/navigate-page!","cljs.core/boolean","accountant.core/dispatch-current!"],"sourcesContent":["(ns function.core\n  (:require\n    [reagent.core :as reagent :refer [atom]]\n    [reagent.session :as session]\n    [reitit.frontend :as reitit]\n    [clerk.core :as clerk]\n    [accountant.core :as accountant]\n    [cljs.reader :refer [read-string]]))\n\n(def router\n  (reitit/router\n    [[\"/\" :index]]))\n\n(defn client-page []\n  [:div {:style {:min-height \"100vh\"}}\n    [:h1 \"Reagent\"]\n    [:h3 \"it works afterall :')'\"]])\n\n(defn mount-root []\n  (reagent/render [client-page] (.getElementById js/document \"app\")))\n\n(defn init! []\n\n  (clerk/initialize!)\n  (accountant/configure-navigation!\n    {:nav-handler\n     (fn [path]\n       (let [match (reitit/match-by-path router path)\n             current-page (:name (:data  match))\n             route-params (:path-params match)]\n         (reagent/after-render clerk/after-render!)\n         ;(dispatch [:add-to-db {:current-page current-page\n         ;                       :route-params route-params)\n         (clerk/navigate-page! path)))\n\n     :path-exists?\n     (fn [path]\n       (boolean (reitit/match-by-path router path)))})\n  (accountant/dispatch-current!)\n  (mount-root))\n"]}